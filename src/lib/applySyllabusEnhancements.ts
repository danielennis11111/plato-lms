import { SyllabusEnhancer } from './syllabusEnhancer';
import { Course } from './mockCanvasApi';

// Sample course data to test our enhancements
const sampleCourses: Course[] = [
  {
    id: 1,
    name: 'Advanced Web Development',
    course_code: 'CS380',
    description: 'Master modern web development with React, Next.js, Node.js, and cloud deployment. Build full-stack applications using TypeScript, database integration, authentication, and real-time features.',
    instructor: 'Dr. Sarah Martinez',
    instructor_email: 'faculty@plato.edu',
    term: 'Summer 2025',
    total_points: 1000,
    current_grade: 87,
    start_date: '2025-05-12T00:00:00.000Z',
    end_date: '2025-08-15T00:00:00.000Z',
    department: 'Computer Science',
    credits: 4,
    prerequisites: ['CS250 Data Structures', 'CS270 Web Fundamentals'],
    room_location: 'ENGR 205',
    meeting_times: 'MWF 10:00-10:50 AM, Lab: T 2:00-4:50 PM',
    modules: [], // Will be enhanced
  },
  {
    id: 3,
    name: 'Calculus I',
    course_code: 'MAT265',
    description: 'Limits, derivatives, and applications of differential calculus. Introduction to integral calculus.',
    instructor: 'Dr. James Wilson',
    instructor_email: 'j.wilson@plato.edu',
    term: 'Summer 2025',
    total_points: 900,
    current_grade: 82,
    start_date: '2025-05-12T00:00:00.000Z',
    end_date: '2025-08-15T00:00:00.000Z',
    department: 'Mathematics',
    credits: 4,
    prerequisites: ['MAT160 College Algebra', 'MAT170 Precalculus'],
    room_location: 'MATH 315',
    meeting_times: 'MTWF 11:00-11:50 AM',
    modules: [],
  },
  {
    id: 4,
    name: 'Introduction to Literature',
    course_code: 'ENG101',
    description: 'Explore fundamental literary genres, critical reading strategies, and analytical writing through diverse texts from various cultural traditions and historical periods.',
    instructor: 'Dr. Emily Watson',
    instructor_email: 'e.watson@plato.edu',
    term: 'Summer 2025',
    total_points: 800,
    current_grade: 0,
    start_date: '2025-05-12T00:00:00.000Z',
    end_date: '2025-08-15T00:00:00.000Z',
    department: 'English',
    credits: 3,
    prerequisites: [],
    room_location: 'ENGL 150',
    meeting_times: 'MWF 9:00-9:50 AM',
    modules: [],
  },
  {
    id: 14,
    name: 'Elementary Chinese I',
    course_code: 'CHI 101',
    description: 'Introduction to modern Chinese language with emphasis on pronunciation, basic sentence patterns, and character recognition. Development of elementary speaking, listening, reading and writing skills.',
    instructor: 'Fangzhou Shi',
    instructor_email: 'fangzh10@asu.edu',
    term: 'Summer 2025',
    total_points: 1000,
    current_grade: 89,
    start_date: '2025-05-12T00:00:00.000Z',
    end_date: '2025-08-15T00:00:00.000Z',
    department: 'TCLAS School of International Letters and Cultures',
    credits: 4,
    prerequisites: [],
    room_location: 'LL 102',
    meeting_times: 'MTWRF 9:00-9:50 AM',
    modules: [],
  }
];

// Test the enhancement system
export function testSyllabusEnhancements() {
  console.log('🧪 Testing Syllabi Enhancement System\n');
  
  sampleCourses.forEach(course => {
    console.log(`\n📚 Testing ${course.name} (${course.course_code})`);
    console.log(`Department: ${course.department}`);
    
    const preview = SyllabusEnhancer.previewEnhancement(course);
    
    console.log(`\n✅ Enhancements Applied:`);
    preview.improvements.forEach(improvement => {
      console.log(`  • ${improvement}`);
    });
    
    console.log(`\n📊 Content Generated:`);
    console.log(`  • Modules: ${preview.moduleCount}`);
    console.log(`  • Syllabus Length: ${preview.syllabus.length} characters`);
    
    console.log(`\n📄 Syllabus Preview (first 200 chars):`);
    console.log(`${preview.syllabus.substring(0, 200)}...`);
    
    console.log('\n' + '='.repeat(80));
  });
}

// Generate enhanced course data that can be copied to mockCanvasApi.ts
export function generateEnhancedCourseData(): string {
  console.log('🔧 Generating Enhanced Course Data...\n');
  
  const enhancedCourses = SyllabusEnhancer.enhanceAllCourses(sampleCourses);
  
  let output = '// Enhanced Courses with Generated Syllabi and Modules\n';
  output += '// Generated by SyllabusEnhancer System\n\n';
  
  enhancedCourses.forEach((course, index) => {
    output += `// Course ${index + 1}: ${course.name}\n`;
    output += `{\n`;
    output += `  id: ${course.id},\n`;
    output += `  name: '${course.name}',\n`;
    output += `  course_code: '${course.course_code}',\n`;
    output += `  description: '${course.description}',\n`;
    output += `  instructor: '${course.instructor}',\n`;
    output += `  instructor_email: '${course.instructor_email}',\n`;
    output += `  term: '${course.term}',\n`;
    output += `  total_points: ${course.total_points},\n`;
    output += `  current_grade: ${course.current_grade},\n`;
    output += `  start_date: '${course.start_date}',\n`;
    output += `  end_date: '${course.end_date}',\n`;
    output += `  department: '${course.department}',\n`;
    output += `  credits: ${course.credits},\n`;
    output += `  prerequisites: ${JSON.stringify(course.prerequisites)},\n`;
    output += `  room_location: '${course.room_location}',\n`;
    output += `  meeting_times: '${course.meeting_times}',\n`;
    
    // Add the enhanced syllabus (escaped for JavaScript string)
    const escapedSyllabus = course.syllabus?.replace(/'/g, "\\'").replace(/\n/g, '\\n') || '';
    output += `  syllabus: \`${escapedSyllabus}\`,\n`;
    
    // Add enhanced modules
    output += `  modules: [\n`;
    course.modules.forEach((module, moduleIndex) => {
      output += `    {\n`;
      output += `      id: ${module.id},\n`;
      output += `      name: '${module.name}',\n`;
      output += `      description: '${module.description}',\n`;
      output += `      due_date: '${module.due_date}',\n`;
      output += `      is_completed: ${module.is_completed},\n`;
      output += `      items: [\n`;
      
      module.items?.forEach((item, itemIndex) => {
        output += `        {\n`;
        output += `          id: ${item.id},\n`;
        output += `          title: '${item.title}',\n`;
        output += `          type: '${item.type}',\n`;
        const escapedContent = item.content?.replace(/'/g, "\\'").replace(/\n/g, '\\n') || '';
        output += `          content: '${escapedContent}',\n`;
        output += `          due_date: '${item.due_date}',\n`;
        output += `          status: '${item.status}',\n`;
        if (item.grade) output += `          grade: ${item.grade},\n`;
        if (item.feedback) output += `          feedback: '${item.feedback}',\n`;
        output += `          points_possible: ${item.points_possible}\n`;
        output += `        }${itemIndex < (module.items?.length || 0) - 1 ? ',' : ''}\n`;
      });
      
      output += `      ]\n`;
      output += `    }${moduleIndex < course.modules.length - 1 ? ',' : ''}\n`;
    });
    output += `  ]\n`;
    output += `},\n\n`;
  });
  
  return output;
}

// Preview specific course enhancement
export function previewCourseEnhancement(courseId: number): void {
  const course = sampleCourses.find(c => c.id === courseId);
  if (!course) {
    console.log(`❌ Course with ID ${courseId} not found`);
    return;
  }
  
  console.log(`\n🔍 Detailed Preview: ${course.name} (${course.course_code})\n`);
  
  const enhanced = SyllabusEnhancer.enhanceCourse(course);
  
  console.log('📄 FULL SYLLABUS:\n');
  console.log(enhanced.syllabus);
  
  console.log('\n📚 ENHANCED MODULES:\n');
  enhanced.modules.forEach((module, index) => {
    console.log(`Module ${index + 1}: ${module.name}`);
    console.log(`Description: ${module.description}`);
    console.log(`Items: ${module.items?.length || 0}`);
    
    module.items?.forEach((item, itemIndex) => {
      console.log(`  ${itemIndex + 1}. ${item.title} (${item.type}) - ${item.points_possible} pts`);
      if (item.content && item.content.length > 100) {
        console.log(`     Content: ${item.content.substring(0, 100)}...`);
      }
    });
    console.log('');
  });
}

// Command line interface for testing
if (require.main === module) {
  const args = process.argv.slice(2);
  
  if (args.length === 0) {
    console.log('📚 Syllabi Enhancement System');
    console.log('\nUsage:');
    console.log('  node applySyllabusEnhancements.js test     - Test all courses');
    console.log('  node applySyllabusEnhancements.js generate - Generate enhanced data');
    console.log('  node applySyllabusEnhancements.js preview [courseId] - Preview specific course');
  } else if (args[0] === 'test') {
    testSyllabusEnhancements();
  } else if (args[0] === 'generate') {
    const enhancedData = generateEnhancedCourseData();
    console.log(enhancedData);
  } else if (args[0] === 'preview') {
    const courseId = parseInt(args[1]) || 1;
    previewCourseEnhancement(courseId);
  }
} 